rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // admins: doc id == uid of admin user
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if false; // write via server or restricted admin action only
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
      // friends subcollection
      match /friends/{fid} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && (request.auth.uid == userId || request.auth.uid == resource.data.uid);
        allow delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /photos/{photoId} {
      allow read: if resource.data.public == true || request.auth != null || resource.data.shared == true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }

    match /posts/{postId} {
      allow read: if resource.data.public == true || request.auth != null || resource.data.shared == true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }

    match /guestbook/{gbId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && (request.auth.uid == resource.data.userId || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }

    match /friendRequests/{reqId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
      allow read: if request.auth != null && (request.auth.uid == resource.data.to || request.auth.uid == resource.data.from);
      allow update: if request.auth != null && (request.auth.uid == resource.data.to || request.auth.uid == resource.data.from);
      allow delete: if request.auth != null && (request.auth.uid == resource.data.to || request.auth.uid == resource.data.from);
    }

    match /notifications/{nid} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (request.auth.uid == resource.data.to || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
      allow update: if request.auth != null && request.auth.uid == resource.data.to;
      allow delete: if false;
    }

    match /reports/{rid} {
      allow create: if request.auth != null;
      allow read: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow delete: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /bgm/{id} {
      allow read: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow create, delete: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
